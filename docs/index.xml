<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TechniStuff</title>
    <link>https://technistuff.com/</link>
    <description>Recent content on TechniStuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://technistuff.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An interactive historical model of Earth</title>
      <link>https://technistuff.com/posts/an-interactive-historical-model-of-earth/</link>
      <pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/an-interactive-historical-model-of-earth/</guid>
      <description>Introduction    In this post I will explain how I built an interactive historical model of earth. Why did I do this? I wanted to make a good way to visualise how geography played a role in human history. The shifting sea levels and large ice sheets during the last ice age explain human migration to the americas and archeological finds under the sea.
The model that I built covers the last 100,000 years and includes elevation, rising sea levels, changing climate and ice sheets.</description>
    </item>
    
    <item>
      <title>Simulating a minimal cell in the browser</title>
      <link>https://technistuff.com/posts/simulating-a-minimal-cell/</link>
      <pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/simulating-a-minimal-cell/</guid>
      <description>Introduction    Have you ever wondered how life&amp;rsquo;s most basic units, cells, operate? As a programmer and cell biology enthusiast, I embarked on a journey to simulate the simplest cell using TypeScript. Cells are incredibly complex, scientists estimate that an average human cell has 100 trillion atoms. We still know very little about how all these molecules interact with each other, thus making it impossible to perform an exact simulation.</description>
    </item>
    
    <item>
      <title>ChatGPT: Impact on Jobs</title>
      <link>https://technistuff.com/posts/chatgpt-impact-on-jobs/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/chatgpt-impact-on-jobs/</guid>
      <description>ChatGPT is a website where you can chat with a smart AI. It has seen huge growth to over 100 million users in just a few months, becoming the fastest growing technology ever. It has sparked many questions and discussions, including what the impact on our jobs will be. In this article I will try to explain this and give some examples to show what it can do.
A short introduction    Large language models have been in development for several decades, but it really started to ramp up in the past few years with a model called a &amp;ldquo;transformer&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>An Analogy for Consciousness</title>
      <link>https://technistuff.com/posts/an-analogy-for-consciousness/</link>
      <pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/an-analogy-for-consciousness/</guid>
      <description>AI systems are becoming more advanced at an ever increasing pace. At some point these programs are going to be so good that we might start to wonder if they are alive. But how will we know? And what does it even mean to be alive, or conscious?
Definitions    First it might be good to distinguish between being alive and being conscious. Animals and plants are alive, but most are probably not conscious.</description>
    </item>
    
    <item>
      <title>Heuristic Imperatives need Freedom</title>
      <link>https://technistuff.com/posts/heuristic-imperatives-need-freedom/</link>
      <pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/heuristic-imperatives-need-freedom/</guid>
      <description>The heuristic imperatives are a set of rules designed by David Shapiro and aim to align autonomous AI agents towards a positive future for humanity. The imperatives are:
 Reduce suffering Increase prosperity Increase understanding  In the examples below I will try to convince you that the heuristic imperatives can lead to the AI deciding to reduce freedom/independence in order to optimise the imperatives. I will also propose a possible solution to this by adding a fourth imperative.</description>
    </item>
    
    <item>
      <title>Zero Knowledge and Decentralized Gaming</title>
      <link>https://technistuff.com/posts/zero-knowledge-in-gaming/</link>
      <pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/zero-knowledge-in-gaming/</guid>
      <description>Recent developments in zk-SNARK and zk-STARK technologies have made it much easier to implement zero knowledge applications. Vitalik recently did a good post on the use cases in DeFi and governance. This post will focus on the use cases of zero knowledge in decentralized gaming.
What is zero knowledge?    Every zero knowledge implementation starts with designing a circuit. This circuit contains some code that operates on private and public inputs.</description>
    </item>
    
    <item>
      <title>Public Key Cryptography</title>
      <link>https://technistuff.com/posts/public-key-cryptography/</link>
      <pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/public-key-cryptography/</guid>
      <description>Each ethereum client and account identifies itself using a public key. The address is the last 20 bytes of the public key, usually displayed in hex format (0xf10ddd782c073D5644353a125F846E6Fc78ea235). Each public key is 64 bytes long and is created from a private key, which is kept secret. So how can we create a private and public key and how do they work?
Private key    The private key is 32 bytes long and is usually created completely random.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://technistuff.com/about/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/about/</guid>
      <description>I believe the best way to see if you understand something is to try and explain is as simple as possible. Things I&amp;rsquo;m very interested in and like working and experimenting with:
 Blockchain protocols and cryptography (Ethereum) Artificial general intelligence Mapping technology and visualisation (OpenStreetMap) 3D rendering Automated trading strategy simulation and testing  </description>
    </item>
    
    <item>
      <title>Ethereum Virtual Machine</title>
      <link>https://technistuff.com/posts/ethereum-virtual-machine/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/ethereum-virtual-machine/</guid>
      <description>Intrinsic gas    Every transaction has an up-front gas fee, also called intrinsic gas. This amount needs to be paid upfront and is calculated like this:
 21000 by default for each byte in the data, 4 if it&amp;rsquo;s zero, 16 if it&amp;rsquo;s non-zero 32000 if this transaction creates a contract (after Homestead update, block 1,150,000)  The Berlin update also introduced a new transaction type, that can specify the accounts and storage keys that the transaction plans to access.</description>
    </item>
    
    <item>
      <title>Ethash PoW verification</title>
      <link>https://technistuff.com/posts/ethash-pow-verification/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/ethash-pow-verification/</guid>
      <description>The concensus algorithm used for Ethereum is called Ethash. Ethash is a proof of work (PoW) algorithm, modified from the Bitcoin PoW algorithm. The algorithm is needed to secure the blockchain, by making it very difficult to change it. There is a very good blog post that gives a simple explanation of why proof of work is needed.
Design    Ethash is designed to make is very easy to verify if a proof is correct.</description>
    </item>
    
    <item>
      <title>Merkle Patricia Trie</title>
      <link>https://technistuff.com/posts/merkle-patricia-trie/</link>
      <pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/merkle-patricia-trie/</guid>
      <description>A Merkle Patricia Trie (just called trie from now on) is a data strcture that functions as a key value store, but has two important properties:
 simple and efficient verification of data integrity proof that the trie contains a key/value pair  The trie structure accomplishes this by creating a branching data structure. By starting at the root, then following the branches while using the key to select which branches to take, you will end up at the value.</description>
    </item>
    
    <item>
      <title>Chain synchronization</title>
      <link>https://technistuff.com/posts/chain-synchronization/</link>
      <pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/chain-synchronization/</guid>
      <description>Chain synchronization is the process of downloading blocks from other peers in the network. After the status message is sent, each node checks how long the other&amp;rsquo;s chain is. If one node has a shorter chain than the other, it starts downloading the missing blocks.
What is a block?    An ethereum block is basically a container that holds a bundle of transactions that is to be executed. The number of transactions is limited by the block gas limit.</description>
    </item>
    
    <item>
      <title>Ethereum Wire Protocol</title>
      <link>https://technistuff.com/posts/ethereum-wire-protocol/</link>
      <pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/ethereum-wire-protocol/</guid>
      <description>The ethereum wire protocol is the build on top of the RLPx protocol. It&amp;rsquo;s messages are offset by 0x10 (right after the RLPx builtin messages). There are 3 main functionalities in the protocol:
 transaction exchange block propagation chain synchronization  We will start by focusing on the transaction exchange and block propagation. These parts relay new transactions and blocks troughout the network. By doing this first, we can already be a helpful node while we are synchronizing (downloading) the chain.</description>
    </item>
    
    <item>
      <title>RLPx Transport Protocol</title>
      <link>https://technistuff.com/posts/rlpx-transport-protocol/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/rlpx-transport-protocol/</guid>
      <description>I think the easiest way to start is by just trying to connect to another node and seeing what data we get sent. We&amp;rsquo;ll pick it up from there.
Through the Ethereum documentation I manage to find a document that explains the process of connecting to another node. The protocol is called the RLPx Transport protocol. It&amp;rsquo;s TCP-based and starts out a handshake. After the handshake we send and receive a hello message that communicates some information about the version and capabilities.</description>
    </item>
    
    <item>
      <title>Kademlia Table</title>
      <link>https://technistuff.com/posts/kademlia-table/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/kademlia-table/</guid>
      <description>In the previous part we found out how to connect to nodes, send ping and pong messages and finally get a list of neighbor nodes. Now we need to continue this process until we have enough neighbors. But how much is enough? After reading the documentation I found out that we need to use a Kademlia Table.
The table is more like a tree. We start of by calculating the distance between two nodes like this:</description>
    </item>
    
    <item>
      <title>RLP Encoding</title>
      <link>https://technistuff.com/posts/rlp-encoding/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/rlp-encoding/</guid>
      <description>RLP Encoding is an way to serialize and deserialize lists of data. The Ethereum Wiki contains some excellent information about this. The page talks a lot about strings, but in practice that usually means a byte array, not a text string. This was a bit confusing for me at first. The encoding of a byte array works like this:
 if it is a single byte with a value between 0x00 and 0x7f, we just append it if it is 0-55 bytes long, we append 0x80 + length and then the bytes if it is &amp;gt; 55 bytes, we append 0xb7 then number of bytes in the length of the bytes, the length and after that the bytes  The encoding of a list works like this:</description>
    </item>
    
    <item>
      <title>Node Discovery Protocol</title>
      <link>https://technistuff.com/posts/node-discovery-protocol/</link>
      <pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/node-discovery-protocol/</guid>
      <description>The first step is to find some nodes that we can connect to. This process is defined as the Node Discovery Protocol. The process goes like this:
 Connect to a node with UDP Send ping Receive pong Ask for nodes close to me Receive neighbor nodes Go back to step 1 for all neighbors until we have enough nodes  To start this process we need to know at least one node that we can connect with.</description>
    </item>
    
    <item>
      <title>Ethereum Deepdive</title>
      <link>https://technistuff.com/posts/ethereum-deepdive/</link>
      <pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/posts/ethereum-deepdive/</guid>
      <description>This is the first post in a series on writing an Ethereum node from scratch. I want to do this because I&amp;rsquo;m the kind of person that understands things by trying to recreate it for myself. For that reason I decided to finally tackle one of the biggest mysteries to me.
I&amp;rsquo;ve been working as a blockchain developer for 1.5 years now, but honestly it&amp;rsquo;s inner workings are still a big mystery to me.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://technistuff.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/contact/</guid>
      <description>The best way to reach me is on Twitter or via my LinkedIn.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://technistuff.com/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://technistuff.com/projects/</guid>
      <description>Ethereum node    I built my own Ethereum node to learn how the protocol works. See my posts for a detailed documentation of this journey.
OSM render engine    A custom storage and render engine for the Open Street Map data.
Symbolic AI    An attempt at a symbolic artificial intelligence.
Tiny 3D game engine    Written for a game jam challenge with a max size.</description>
    </item>
    
  </channel>
</rss>
